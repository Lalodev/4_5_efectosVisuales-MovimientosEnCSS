html {
    box-sizing: border-box;
    font-family: sans-serif;
    font-size: 16px;
}

*,
*::after,
*::before {
    box-sizing: inherit;
}

.box {
    border: thick solid #000;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 5rem;
    width: 200px;
    height: 200px;
}

.card {
    border: thick solid #000;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 5rem;
    width: 600px;
    height: 400px;
}

.card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 0 50%;
}

/*
    Transiciones

        - transition-property
        - transition-duration
        - transition-timing-function: none, linear, ease, ease-in, ease-out, ease-in-out, steps
        - transition-delay

    transition: property duration timing-function delay

    https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties
*/
.transitions .box {
    background-color: magenta;
    border-color: green;
    transition-property: background-color;
    transition-duration: 500ms;
    transition-timing-function: ease;
    transition-delay: 0.5s;
    transition: border-color 2s linear 1s;
    transition: all 2s ease-in-out 250ms; /*all puede afectar al rendimiento*/
    transition: background-color 2s ease-in-out 250ms,
        border-color 2s ease-in-out 250ms,
        border-radius 2s ease-in-out 250ms;
}

.transitions .box:hover {
    background-color: cyan;
    border-color: red;
    border-radius: 2rem;
    /*border-style: dashed;*/
}

.transitions .card {
    transition: opacity 1s ease-out,
        border-color 3s steps(3),
        filter 2s ease-in 1s;
        box-shadow: 1.5s linear 2s;
}

.transitions .card:hover {
    opacity: 0.75;
    border-color: orchid;
    filter: blur(0.15rem);
    box-shadow: 1rem 1rem 2rem .5rem #000;
}

.transitions .card img {
    transition: object-position 2s ease-in-out 3s;
}

.transitions .card img:hover {
    object-position: 100% 50%;
}

.transform-2d img {
    transition: transform 2s ease-in-out;
}

.transform-2d img:hover {   
    transform: none;
    transform: translateX(4rem);
    transform: translateY(4rem);
    transform: translateY(-4rem);
    transform: translateZ(4rem);
    transform: translate(-4rem, 4rem);
    transform: translate(50%, 50%);
    transform: translate(-50%, -50%);
    transform: translate(50%, 200px);
    transform: translate(-50%, 100px);

    transform: scaleX(2);
    transform: scaleY(0.5);
    transform: scaleZ(1.5);
    transform: scale(1.5, 1.5);
    transform: scale(-1, -1);
    transform: scale(-0.5, -0.5);

    transform: rotateX(60deg);
    transform: rotateX(90deg);
    transform: rotateY(60deg);
    transform: rotateY(90deg);
    transform: rotateZ(60deg);
    transform: rotateZ(-90deg);
    transform: rotateZ(-360deg);
    transform: rotate(360deg);
    transform: rotate(-360deg);

    transform: skewX(20deg);
    transform: skewX(-20deg);
    transform: skewY(20deg);
    transform: skewY(-20deg);
    transform: skew(20deg, 20deg);

    /*
        matrix( scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY() );
        https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix()
    */
    transform: matrix(1, 2, 2, 1, 20, 10);

    transform: translate(25%, -50%);
    transform: translate(25%, -50%) rotate(240deg) skew(10deg, 20deg) scale(-0.5, -.5);

}

.transform-3d {
    perspective: 3rem;
}

.transform-3d img {
    transition: transform 2s ease-in-out;
}

.transform-3d img:hover {
    transform: translateZ(4rem);
    transform: perspective(1000px) translateZ(4rem);
    transform: perspective(100rem) translateZ(4rem);
    transform: perspective(10rem) translateZ(4rem);
    transform: perspective(1rem) translateZ(4rem);
    transform: perspective(10rem) translateZ(-4rem);
     /*https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d()*/
    transform: translateZ(-4rem);
    transform: translate3d(2rem, 50%, -3rem);   
    transform: scaleZ(1.5);
    transform: scale3d(2, 0.5, 3);
    transform: rotateX(60deg);
    transform: rotateX(90deg);
    transform: rotateY(60deg);
    transform: rotateY(-90deg);
    transform: rotate3d(1, 1, 1, 45deg);
    transform: rotate3d(-1, 2.5, -2, 60deg);
    /*https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d()*/
    transform: matrix3d(1, 0, 0, 0, 0, 1, 6, 0, 0, 0, 1, 0, 50, 100, 0, 1.1);

    transform: rotate3d(-1, 2.5, -2, 60deg) translate3d(2rem, 50%, -3rem) scale3d(2, 0.5, 3);
}

.transform-origin img {
    transition: transform 2s ease-in-out;
    /*transform-origin: x y z;*/
    transform-origin: 50% 50% 0;      
    transform-origin: 0 0;
    transform-origin: 0; 
    transform-origin: top left;
    transform-origin: top right;  
    transform-origin: top center;
    transform-origin: bottom center;  
    transform-origin: bottom left;
    transform-origin: bottom right;
    transform-origin: center right;
    transform-origin: center left;    
    transform-origin: -2rem -3rem;
    transform-origin: 2rem 3rem;
    transform-origin: 2rem 75%;   
    transform-origin: 25% 75%; 
    transform-origin: -5% -5%; 
    transform-origin: 30% 90%; 
}

.transform-origin img:hover {
    transform: rotate(360deg);
}

.flip-card-1,
 .flip-card-2 {
    border: thick solid #000;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 5rem;
    width: 600px;
    height: 400px;

    position: relative;
    cursor: pointer;
    transition: transform 1s ease-in-out;
    perspective: 10rem;      
    transform-style: flat;
    transform-style: preserve-3d;
}

.flip-card-1 img,
.flip-card-2 img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 0 50%;
}

.flip-face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: visible;
    backface-visibility: hidden;
}

.flip-card-2 {
    transform-origin: center right;
}

.flip-card-1:hover {
    transform: rotateY(180deg);
}

.flip-card-2:hover {
    transform: translateX(-100%) rotateY(-180deg);
}

.flip-front {
    transform: rotateY(0deg);
}

.flip-back {
    transform: rotateY(180deg);
}

@keyframes myAwesomeAnimation {
    from {
        opacity: 0;
        transform: translateX(0);
    }   
    
    to {
        opacity: 1;
        transform: translateX(100%);
    }
}

.my-animation {
    /*animation: name duration timing-function delay iteration-count direction fill-mode play-state;*/
    animation-name: myAwesomeAnimation;
    animation-duration: 2s;
    animation-timing-function: cubic-bezier(1, 0, 0, 1);
    animation-timing-function: cubic-bezier(.33,.92,.92,.36);
    animation-timing-function: ease-in-out;
    animation-delay: 1500ms;
    animation-delay: 0;
    animation-iteration-count: 3;
    animation-iteration-count: infinite;
    animation-iteration-count: 1;
    animation-direction: reverse;
    animation-direction: alternate;
    animation-direction: alternate-reverse;
    animation-direction: normal;
    animation-fill-mode: none;
    /*Al final de la animaci贸n se queda con los estilos finales de la animaci贸n*/
    animation-fill-mode: forwards;
    /*Al final de la animaci贸n se queda con los estilos iniciales de la animaci贸n*/
    animation-fill-mode: backwards;
    /*both aplica al mismo tiempo forwards y backwards*/
    animation-fill-mode: both;
    animation-play-state: paused; /*Con JavaScript*/
    animation-play-state: running;
    animation: myAwesomeAnimation 1s;
    animation: myAwesomeAnimation 1.5s ease 250ms 7 alternate both running;
}